name: Unity Build And Deploy

on:
  push:
    branches: [ main ]
  pull_request:
          types:
            - opened
            - reopened
            - ready_for_review
            - synchronize
            
jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      # 1. check out & cache your Library
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**','Packages/**','ProjectSettings/**') }}

      # 2. build each platform in sequence
      - name: Build OSX
        uses: game-ci/unity-builder@v4
        with:
          targetPlatform: StandaloneOSX
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL:  ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

      - name: Build Windows
        uses: game-ci/unity-builder@v4
        with:
          targetPlatform: StandaloneWindows64
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL:  ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

      - name: Build Linux
        uses: game-ci/unity-builder@v4
        with:
          targetPlatform: StandaloneLinux64
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL:  ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

      # 3. grab your version number
      - name: Read version
        id: version
        run: echo "VERSION=$(cat version)" >> $GITHUB_ENV

      # 4. zip all three outputs
      - name: Zip builds
        run: |
          zip -r StandaloneOSX.zip    build/StandaloneOSX
          zip -r StandaloneWin64.zip  build/StandaloneWindows64
          zip -r StandaloneLinux64.zip build/StandaloneLinux64

      # 5. create the GitHub “pre-release”
      - name: Create Pre-Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag:       "${{ env.VERSION }}-pre-${{ github.run_number }}"
          name:      "${{ env.VERSION }}-pre-${{ github.run_number }}"
          draft:     false
          prerelease: true
          artifacts: |
            StandaloneOSX.zip
            StandaloneWin64.zip
            StandaloneLinux64.zip
