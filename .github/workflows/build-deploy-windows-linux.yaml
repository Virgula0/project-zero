name: Unity Build And Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize

jobs:
  buildForWindowsAndLinuxAndOSX:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # intel osx
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
    outputs:
      buildOutput: ${{ steps.buildStep.outputs.buildOutput }}
    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v4
        with:
          path: Library
          key:
            Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**',
            'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-

      - uses: game-ci/unity-builder@v4
        id: buildStep
        env:
            UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Semantic

      - uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

  uploadAllArtifacts:
    name: Upload All Builds as Single Pre-Release
    runs-on: ubuntu-latest
    needs: buildForWindowsAndLinuxAndOSX
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download All Build Artifacts

      # first
        uses: actions/download-artifact@v3
        with:
          name: build/StandaloneOSX

      # second
      - uses: actions/download-artifact@v3
        with:
          name: build/StandaloneWindows64

      # third
      - uses: actions/download-artifact@v3
        with:
          name: build/StandaloneLinux64

      - name: Create a Pre-Release with All Artifacts
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "${{ env.VERSION }}-pre-${{ github.run_number }}"
          name: "${{ env.VERSION }}-pre-${{ github.run_number }}"
          draft: false
          prerelease: true
          artifacts: |
            StandaloneOSX
            StandaloneWindows64
            StandaloneLinux64
